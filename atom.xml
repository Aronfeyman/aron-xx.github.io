<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kiki</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-11T14:01:23.852Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>kiki</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STM32环境搭建</title>
    <link href="http://example.com/2021/05/11/STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2021/05/11/STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-05-11T12:06:42.000Z</published>
    <updated>2021-05-11T14:01:23.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="STM32环境搭建"><a href="#STM32环境搭建" class="headerlink" title="STM32环境搭建"></a>STM32环境搭建</h1><h2 id="STM32CubeMX搭建"><a href="#STM32CubeMX搭建" class="headerlink" title="STM32CubeMX搭建"></a>STM32CubeMX搭建</h2><blockquote><p>参考教程 <a href="https://blog.csdn.net/as480133937/article/details/98885316">STM32CubeMX安装教程</a><br><strong>STM32CubeMX</strong> 是STM32 芯片图形化配置工具<br>安装CubeMx一共需要三个工具</p><ul><li>JRE （Java Runtime Environment)  Java运行环境 运行JAVA程序所必须的环境的集合<a href="https://www.java.com/en/download/manual.jsp">官方下载地址</a></li><li>STM32CubeMX<a href="https://www.st.com/en/development-tools/stm32cubemx.html?sc=stm32cubemx">官方下载地址</a></li><li>HAL库   STM32 HAL固件库  STM32 HAL固件库是Hardware Abstraction Layer的缩写，中文名称是：硬件抽象层。</li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;STM32环境搭建&quot;&gt;&lt;a href=&quot;#STM32环境搭建&quot; class=&quot;headerlink&quot; title=&quot;STM32环境搭建&quot;&gt;&lt;/a&gt;STM32环境搭建&lt;/h1&gt;&lt;h2 id=&quot;STM32CubeMX搭建&quot;&gt;&lt;a href=&quot;#STM32CubeMX搭</summary>
      
    
    
    
    <category term="stm32" scheme="http://example.com/categories/stm32/"/>
    
    
    <category term="stm32" scheme="http://example.com/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客优化</title>
    <link href="http://example.com/2021/04/23/hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"/>
    <id>http://example.com/2021/04/23/hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/</id>
    <published>2021-04-23T08:42:20.000Z</published>
    <updated>2021-05-10T09:24:13.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo博客优化"><a href="#hexo博客优化" class="headerlink" title="hexo博客优化"></a>hexo博客优化</h1><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><blockquote><p>安装<strong>hexo-lazyload-image</strong>插件</p></blockquote><ul><li> 在本地bloger根目录下打开powershell，执行<strong>npm install hexo-lazyload-image –save</strong></li><li> 在 _config.yml下添加以下代码<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">lazyload:  enable: true  # 是否开启图片懒加载  onlypost: false  # 是否只对文章的图片做懒加载  loadingImg: # eg .&#x2F;images&#x2F;loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li> 最后执行 <strong>hexo clean</strong> &amp;&amp;**hexo g -d ** &amp;&amp; **hexo s **命令</li></ul><h2 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h2><blockquote><p>安装 <strong>gulp</strong>插件<br>参考 <a href="https://www.voidking.com/dev-hexo-gulp/">Hexo使用Gulp压缩静态资源</a></p></blockquote><ul><li>在本地bloger根目录下打开powershell，执行<strong>npm install gulp -g</strong> <a href="%E6%AD%A4%E5%A4%84%E6%B7%BB%E5%8A%A0**-g**%EF%BC%8C%E8%A1%A8%E7%A4%BA%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85%E7%9A%84%E6%84%8F%E6%80%9D.">^footnote</a></li></ul><blockquote><p>npm install gulp –save<br>npm install gulp-htmlclean gulp-htmlmin gulp-clean-css gulp-uglify gulp-imagemin –save<br>npm install gulp-babel babel-preset-env babel-preset-mobx –save<br>npm install -D @babel/core @babel/preset-react @babel/preset-env –save</p></blockquote><ul><li><p>在 bloger根目录新建文件 gulpfile.js，把以下代码下载到此文件中</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 初始化一个hexo对象</span><span class="token comment">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">hexo</span>            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                watch<span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hexo        <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">hexo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">hexo</span>            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                watch<span class="token operator">:</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressJs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//排除的js</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress JS:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                presets<span class="token operator">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token comment">// es5检查机制</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//调用压缩组件方法uglify(),对合并的文件进行压缩</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出到目标目录</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下的css文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        rebase<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token comment">//advanced: true, //类型：Boolean 默认：true [是否开启高级优化（合并选择器等）]</span>        compatibility<span class="token operator">:</span> <span class="token string">"ie7"</span> <span class="token comment">//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式]</span>        <span class="token comment">//keepBreaks: true, //类型：Boolean 默认：false [是否保留换行]</span>        <span class="token comment">//keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress CSS:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        protect<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\!--%fooTemplate\b.*?%--></span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token comment">//忽略处理</span>        unprotect<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;script [^>]*\btype="text\/x-handlebars-template"[\s\S]+?&lt;\/script></span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span> <span class="token comment">//特殊处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩HTML</span>        collapseBooleanAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//清除HTML注释</span>        minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面JS</span>        minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//压缩页面CSS</span>        minifyURLs<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//替换页面URL</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress HTML:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 public/medias 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        optimizationLevel<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> title<span class="token operator">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"build"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        <span class="token string">"compressHtml"</span><span class="token punctuation">,</span>        <span class="token string">"compressCss"</span><span class="token punctuation">,</span>        <span class="token string">"compressJs"</span><span class="token punctuation">,</span>        <span class="token string">"compressImage"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"default"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token string">"compressJs"</span><span class="token punctuation">,</span><span class="token string">"compressImage"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改travis配置</p><blockquote><p>在bloger根目录下的.travis.yml文件中添加以下代码</p></blockquote><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">sudo: falselanguage: node_jsnode_js:- 10.16.3cache: npmbranches:  only:  - master # build master branch onlyenv:  global:  - GIT_USER: voidking ###修改成自己的github账户名,以下voidking都要改.  - HEXO_BACKUP_REPO: github.com&#x2F;voidking&#x2F;hexo-backup.git  - HEXO_THEME_REPO: github.com&#x2F;voidking&#x2F;hexo-theme-next.git  - GITHUB_PAGES_REPO: github.com&#x2F;voidking&#x2F;voidking.github.io.git  - VOIDKING_REPO: github.com&#x2F;voidking&#x2F;voidking.gitbefore_install:- export TZ&#x3D;&#39;Asia&#x2F;Shanghai&#39;- npm install hexo -g- npm install gulp-cli -ginstall:- npm installscript:- git clone https:&#x2F;&#x2F;$&#123;HEXO_THEME_REPO&#125; themes&#x2F;next- git clone https:&#x2F;&#x2F;$&#123;GIT_USER&#125;:$&#123;GITHUB_TOKEN&#125;@$&#123;HEXO_BACKUP_REPO&#125; hexo-backup- mv hexo-backup&#x2F;source .- rm -rf source&#x2F;private- npm run buildafter_success:- git config --global user.name &quot;voidking&quot;- git config --global user.email &quot;voidking@qq.com&quot;- git clone https:&#x2F;&#x2F;$&#123;GIT_USER&#125;:$&#123;GITHUB_TOKEN&#125;@$&#123;GITHUB_PAGES_REPO&#125; voidking- unalias cp- cp -rf public&#x2F;. voidking- cd voidking- git add .- git commit -m &quot;Travis CI Auto Builder&quot;- git push --force --quiet &quot;https:&#x2F;&#x2F;$&#123;GIT_USER&#125;:$&#123;GITHUB_TOKEN&#125;@$&#123;GITHUB_PAGES_REPO&#125;&quot; master:master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用了gulp时候，构建发布需要四个命令</p><blockquote><p>hexo clean<br>hexo g<br>gulp<br>hexo d</p></blockquote></li><li><p>简化输入，直接构建两条命令 npm run bulid  &amp;&amp;  npm run deploy直接完成部署。</p><blockquote><p>在bloger根目录下的package.json文件中添加以下代码<br>​```json<br>“scripts”: {<br>“build”: “hexo clean &amp;&amp; hexo g &amp;&amp; gulp”,<br>“deploy”: “hexo clean &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d”<br>}</p></blockquote></li></ul><h2 id="CDN加速–Content-Delivery-Network"><a href="#CDN加速–Content-Delivery-Network" class="headerlink" title="CDN加速–Content Delivery Network"></a>CDN加速–Content Delivery Network</h2><blockquote><p>CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p></blockquote><h3 id="jsDelivr-Github"><a href="#jsDelivr-Github" class="headerlink" title="jsDelivr + Github"></a>jsDelivr + Github</h3><h2 id="Travis-CI使用"><a href="#Travis-CI使用" class="headerlink" title="Travis CI使用"></a>Travis CI使用</h2><blockquote><p>Travis CI是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在GitHub托管的代码 </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo博客优化&quot;&gt;&lt;a href=&quot;#hexo博客优化&quot; class=&quot;headerlink&quot; title=&quot;hexo博客优化&quot;&gt;&lt;/a&gt;hexo博客优化&lt;/h1&gt;&lt;h2 id=&quot;图片懒加载&quot;&gt;&lt;a href=&quot;#图片懒加载&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>数学学习计划</title>
    <link href="http://example.com/2021/04/21/%E6%95%B0%E5%AD%A6%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <id>http://example.com/2021/04/21/%E6%95%B0%E5%AD%A6%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</id>
    <published>2021-04-21T14:00:09.618Z</published>
    <updated>2021-05-10T09:14:15.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数学学习路线及时间规划"><a href="#数学学习路线及时间规划" class="headerlink" title="数学学习路线及时间规划"></a>数学学习路线及时间规划</h1><blockquote><p>这里做一个简单的规划路线，如何在规定的时间内比较圆满的完成自己的目标？<br>数学的学习不是一蹴而就，而是一个漫长的学习过程，但其内容的掌握又必须在规定的时间完成，那如何保证自己真正地理解每一个概念而又不至于为了理解一个概念而花费太多时间呢？既然要在规定的时间内完成自己的数学学习计划，那么主次就要分明，哪些概念是至关重要的？哪些概念是次要的？重要的定理和重要的证明过程应该深刻影响后面的概念的，或者说起到承上启下的作用的。其次做习题就应该是有选择的去做，习题做完以后必须思考这些习题教会了我们什么，是教会了我们掌握了一种证明的技巧，还是教会了我们运用定理去解决一些之前没掌握这个定理就不能解决的问题？又或者说教会了我们理解了一些重要的数学概念？<br>数学的学习应该分为三个过程：看教材<del>做习题</del>讨论及反思（三者的权重如何划分应该根据自身的学习情况加以调整，但这三者缺一不可，必须同时进行。）<br>时限：2学期</p></blockquote><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h3 id="参考教材"><a href="#参考教材" class="headerlink" title="参考教材"></a>参考教材</h3><blockquote><p>这里列举初始阶段我们需要参考的数学教材。<br>知乎有关问题链接 <a href="https://www.zhihu.com/question/24066773/answer/80124451">math is difficult ?</a></p></blockquote><ul><li>数学分析  -卓里奇著</li><li>数学分析新讲 -张筑生著</li></ul><h3 id="习题集"><a href="#习题集" class="headerlink" title="习题集"></a>习题集</h3><blockquote><p>后续会收集一些这几年考研的有代表性的数学题</p></blockquote><ul><li>《数学分析习题课讲义》 —谢惠民</li><li>《数学分析中的典型问题与方法》—-裴礼文</li></ul><h3 id="视频讲解"><a href="#视频讲解" class="headerlink" title="视频讲解"></a>视频讲解</h3><blockquote><p>这里只推荐一些数学分析的视频，高等数学的视频不推荐.</p></blockquote><h4 id="第1学期—4-month"><a href="#第1学期—4-month" class="headerlink" title="第1学期—4 month"></a>第1学期—4 month</h4><blockquote><p>第一学期该如何按时看完这些视频呢？ 第一阶段采用粗略地理解其思想的，理解其主干的方式去理解这些视频所讲的内容，主要是了解其讲了哪些主要的知识点.</p></blockquote><ul><li><a href="https://www.bilibili.com/video/BV1ps411E7jf" title="总时长18h">帅帅的齐震宇讲微积分</a>  -预期6周</li><li><a href="https://www.bilibili.com/video/BV1h64y1f7RY" title="总时长66h">数学分析Ⅰ-袁亚湘</a>  -预期2学期</li><li><a href="https://www.bilibili.com/video/BV1qW411N7FU" title="总时长3h">科普微积分的本质</a>  -预期1学期</li></ul><h3 id="科普书籍推荐"><a href="#科普书籍推荐" class="headerlink" title="科普书籍推荐"></a>科普书籍推荐</h3><blockquote><p>这里分享一些国外数学家写的科普书籍，主要帮助我们理解数学家思考的方式，或者说他们是如何看待数学的，以便我们能够欣赏数学中的奇妙。最主要还是缓解我们对数学的精神疲劳.<br><a href="https://booksc.org/">全球最大的免费电子书库</a>    —-需用翻墙工具越墙</p></blockquote><ul><li>《数学》—蒂莫西•高尔斯     牛津通识读本</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数学学习路线及时间规划&quot;&gt;&lt;a href=&quot;#数学学习路线及时间规划&quot; class=&quot;headerlink&quot; title=&quot;数学学习路线及时间规划&quot;&gt;&lt;/a&gt;数学学习路线及时间规划&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;这里做一个简单的规划路线，如何在规定的时间</summary>
      
    
    
    
    <category term="数学" scheme="http://example.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="数学" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>利用hexo框架搭建博客</title>
    <link href="http://example.com/2021/04/18/hexo-matery%E6%A8%A1%E6%9D%BF%E4%BF%AE%E6%94%B9/"/>
    <id>http://example.com/2021/04/18/hexo-matery%E6%A8%A1%E6%9D%BF%E4%BF%AE%E6%94%B9/</id>
    <published>2021-04-18T06:12:16.763Z</published>
    <updated>2021-05-10T09:24:13.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用hexo搭建自己的blog"><a href="#使用hexo搭建自己的blog" class="headerlink" title="使用hexo搭建自己的blog"></a>使用hexo搭建自己的blog</h1><blockquote><p>使用hexo框架配合hexo搭建自己的blog<br>预备知识： git操作命令和简单的批处理命令</p></blockquote><h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><blockquote><p>参考hexo官方文档 <a href="https://hexo.io/zh-cn/docs/">hexo</a><br>Hexo是高效的静态站点生成框架，它基于Node.js</p></blockquote><h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><ul><li>hexo g -d     直接完成页面生成渲染及上传</li><li>hexo s |hexo server   启动服务器</li></ul><h3 id="hexo主题部署-–基于hexo-matery主题"><a href="#hexo主题部署-–基于hexo-matery主题" class="headerlink" title="hexo主题部署 –基于hexo-matery主题"></a>hexo主题部署 –基于hexo-matery主题</h3><blockquote><p>修改一些参数，展现出符合自己审美的状态。</p></blockquote><h4 id="去掉banner颜色动画"><a href="#去掉banner颜色动画" class="headerlink" title="去掉banner颜色动画"></a>去掉banner颜色动画</h4><ul><li>在 ./theme文件夹下找到matery.css文件，使用快捷键(<em>ctrl+F</em>) 找出代码中的**.bg-cover:after**部分。注视掉即可</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.bg-cover:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rainbow 60s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> rainbow 60s infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="安装live2d动画模型"><a href="#安装live2d动画模型" class="headerlink" title="安装live2d动画模型"></a>安装live2d动画模型</h4><blockquote><p>参考教程：<a href="%22https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md%22">hexo-helper-live2d</a></p></blockquote><ul><li>在博客根目录下打开powershell，使用命令  npm install –save hexo-helper-live2d</li></ul><h4 id="创建自己的专属域名"><a href="#创建自己的专属域名" class="headerlink" title="创建自己的专属域名"></a>创建自己的专属域名</h4><blockquote><p>通过阿里云这个域名代理商，把<strong>yourname.github.io</strong>换成<strong>yourname.com</strong>s</p></blockquote><h4 id="CDN访问加速"><a href="#CDN访问加速" class="headerlink" title="CDN访问加速"></a>CDN访问加速</h4><blockquote><p>简介</p></blockquote><h4 id="点击鼠标显示烟花效果"><a href="#点击鼠标显示烟花效果" class="headerlink" title="点击鼠标显示烟花效果"></a>点击鼠标显示烟花效果</h4><blockquote><p>转载<a href="%22https://liuruibin.com/posts/64eb.html%22">LRBlog</a></p></blockquote><ul><li><p>首先在themes/matery/source/js目录下新建<strong>fireworks.js</strong>文件，将链接中的内容复制到fireworks.js文件内。<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.5/source/js/fireworks.js">fireworks文件</a></p></li><li><p>然后再themes/matery/layout/layout.ejs文件内添加下面的内容</p></li></ul><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fireworks<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.bootcss.com/animejs/2.2.0/anime.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/fireworks.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><blockquote><p>添加樱花飘落和雪花飘落效果 在themes/matery/source/js目录下新建<strong>sakura.js</strong> <strong>snow.js</strong>   <a href="%22https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.5/source/js/sakura.js%22">sakura.js文件</a><br><a href="%22https://cdn.jsdelivr.net/gh/Yafine/cdn@3.2.5/source/js/snow1.js%22">snow.js文件</a></p></blockquote><ul><li> 然后再themes/matery/layout/layout.ejs文件内添加下面的内容<pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token comment">//只在桌面版网页启用特效</span><span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/sakura.js">&lt;\/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/snow.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="网站提速"><a href="#网站提速" class="headerlink" title="网站提速"></a>网站提速</h3><blockquote><p>网页打开缓慢 ，可行的操作</p></blockquote><ul><li><pre><code>尝试安装 hexo-all-minifier 插件来压缩文件</code></pre></li><li>   减少不必要的 js 插件，例如字数统计、动态背景。<h4 id="查找并解决拖慢速度的资源，以-Chrome-浏览器为例："><a href="#查找并解决拖慢速度的资源，以-Chrome-浏览器为例：" class="headerlink" title="查找并解决拖慢速度的资源，以 Chrome 浏览器为例："></a>查找并解决拖慢速度的资源，以 Chrome 浏览器为例：</h4></li><li>页面中点击右键，选择「检查」</li><li>在右边的窗口中「Network」选项卡，并勾选「Disable cache」<h4 id="刷新网页，查看加载速度慢的资源"><a href="#刷新网页，查看加载速度慢的资源" class="headerlink" title="刷新网页，查看加载速度慢的资源:"></a>刷新网页，查看加载速度慢的资源:</h4></li><li>加载缓慢的图片，建议使用 CDN</li><li>加载缓慢的可以不用的 js 插件，建议舍弃</li><li>加载缓慢却必须使用的 js 插件，建议下载并自己上传至 <strong>jsdelivr</strong></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用hexo搭建自己的blog&quot;&gt;&lt;a href=&quot;#使用hexo搭建自己的blog&quot; class=&quot;headerlink&quot; title=&quot;使用hexo搭建自己的blog&quot;&gt;&lt;/a&gt;使用hexo搭建自己的blog&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;使用hex</summary>
      
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
